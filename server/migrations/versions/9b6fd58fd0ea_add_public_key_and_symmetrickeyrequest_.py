"""Add public key and SymmetricKeyRequest models

Revision ID: 9b6fd58fd0ea
Revises: 58feac7b31b9
Create Date: 2024-10-29 15:35:45.900682

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9b6fd58fd0ea'
down_revision = '58feac7b31b9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('share_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('requester_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('request_date', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('encrypted_key', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('public_key', sa.Text(), nullable=False),
    sa.Column('private_key', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.drop_table('symmetric_key_request')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('public_key')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('public_key', postgresql.BYTEA(), autoincrement=False, nullable=True))

    op.create_table('symmetric_key_request',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('requester_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('requested_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('symmetric_key_encrypted', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('data_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['requested_user_id'], ['user.id'], name='symmetric_key_request_requested_user_id_fkey'),
    sa.ForeignKeyConstraint(['requester_id'], ['user.id'], name='symmetric_key_request_requester_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='symmetric_key_request_pkey')
    )
    op.drop_table('user_keys')
    op.drop_table('share_request')
    # ### end Alembic commands ###
